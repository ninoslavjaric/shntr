version: "3.2"
services:
  php-shntr:
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-nokey}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY:-nosecret}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-noregion}"
      shntr_TOKEN_PASSPHRASE: "${shntr_TOKEN_PASSPHRASE:-nopassphrase}"
      shntr_TOKEN_USERNAME: "${shntr_TOKEN_USERNAME:-nousername}"
      shntr_TOKEN_PASSWORD: "${shntr_TOKEN_PASSWORD:-nopassword}"
      shntr_TOKEN_PAYMAIL: "${shntr_TOKEN_PAYMAIL:-nopaymail}"
      shntr_TOKEN_ADDRESS: "${shntr_TOKEN_ADDRESS:-noaddress}"
      STRIPE_WEBHOOK_SECRET: "${STRIPE_WEBHOOK_SECRET:-nosecret}"
      HOST: "${HOST:-local.shntr.com}"
    build:
      context: './php/'
      dockerfile: ${DOCKERFILE_NAME:-Dockerfile}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - backend-shntr
    volumes:
      - ./app:/var/www/html/
      - ./splunk/shared/php:/var/logs/php-fpm
#      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
  php-cron-shntr:
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-nokey}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY:-nosecret}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-noregion}"
      shntr_TOKEN_PASSPHRASE: "${shntr_TOKEN_PASSPHRASE:-nopassphrase}"
      shntr_TOKEN_USERNAME: "${shntr_TOKEN_USERNAME:-nousername}"
      shntr_TOKEN_PASSWORD: "${shntr_TOKEN_PASSWORD:-nopassword}"
      shntr_TOKEN_PAYMAIL: "${shntr_TOKEN_PAYMAIL:-nopaymail}"
      shntr_TOKEN_ADDRESS: "${shntr_TOKEN_ADDRESS:-noaddress}"
      STRIPE_WEBHOOK_SECRET: "${STRIPE_WEBHOOK_SECRET:-nosecret}"
      HOST: "${HOST:-local.shntr.com}"
    build:
      context: './php/'
      dockerfile: ${DOCKERFILE_NAME:-Cron.dockerfile}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - backend-shntr
    volumes:
      - ./app:/var/www/html/
      - ./splunk/shared/php:/var/logs/php-fpm
  apache-shntr:
    build: './apache/'
    depends_on:
      - php-shntr
      - db-shntr
    networks:
      - frontend-shntr
      - backend-shntr
    ports:
      - "80:80"
    volumes:
      - ./app:/var/www/html/
      - ./splunk/shared/apache:/var/logs/apache2
  db-shntr:
    platform: linux/x86_64
    image: mariadb:10.6.4-focal
    networks:
      - backend-shntr
    volumes:
      - ./data:/var/lib/mysql/
      - ./mariadb:/tmp/mariadb
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=shntrco_sngine
      - MYSQL_DATABASE=shntrco_sngine
      - MYSQL_PASSWORD=shntrco_sngine
    command: runuser -u mysql /tmp/mariadb/starter
  localstack-shntr:
    image: localstack/localstack:latest
    environment:
      SERVICES: "sqs,sns"
      AWS_DEFAULT_REGION: "us-east-1"
      EDGE_PORT: "4566"
      SQS_QUEUE_NAME: "${SQS_QUEUE_NAME:-test}"
    ports:
      - '4566-4597:4566-4597'
    volumes:
      - "./localstack/tmp/:/tmp/localstack/"
      - "./localstack/bootstrap/:/docker-entrypoint-initaws.d/"
    networks:
      - backend-shntr
  ws-shntr:
    image: node:16.17.1-alpine
    volumes:
    - ./ws-svc:/ws-svc
    working_dir: /ws-svc
    entrypoint: ['/ws-svc/entrypoint.sh']
    command: 'npm start'
    ports:
      - "8083:8083"
    restart: on-failure
    environment:
      SQS_QUEUE_URL: "${SQS_QUEUE_URL:-http://localstack-shntr:4566/000000000000/test}"
      AWS_ENDPOINT: "${AWS_ENDPOINT:-http://localstack-shntr:4566}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-nokey}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY:-nosecret}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-us-east-1}"
      shntr_TOKEN_USERNAME: "${shntr_TOKEN_USERNAME:-nousername}"
      shntr_TOKEN_PASSWORD_DECRYPT: "${shntr_TOKEN_PASSWORD_DECRYPT:-nopassword}"
    networks:
      - backend-shntr
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - localstack-shntr
  redis-shntr:
    image: redis:alpine
    volumes:
    - ./cache:/data
    networks:
      - backend-shntr
  splunk:
    image: splunk/splunk:latest
    ports:
    - 8888:8000
    - 8889:8088
    - 8089
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_PASSWORD: A@nonimus5865
      SPLUNK_HEC_TOKEN: A@nonimus5865
    user: root
    volumes:
    - ./splunk/var:/opt/splunk/var
    - ./splunk/etc:/opt/splunk/etc
    - ./splunk/shared:/usr/share/shntr
networks:
  frontend-shntr:
  backend-shntr:
