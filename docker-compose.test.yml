version: '3.2'
services:
  php-shntr:
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-nokey}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY:-nosecret}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-noregion}"
      shntr_TOKEN_PASSPHRASE: "${shntr_TOKEN_PASSPHRASE:-nopassphrase}"
      shntr_TOKEN_USERNAME: "${shntr_TOKEN_USERNAME:-nousername}"
      shntr_TOKEN_PASSWORD: "${shntr_TOKEN_PASSWORD:-nopassword}"
      shntr_TOKEN_PAYMAIL: "${shntr_TOKEN_PAYMAIL:-nopaymail}"
      shntr_TOKEN_ADDRESS: "${shntr_TOKEN_ADDRESS:-noaddress}"
      STRIPE_WEBHOOK_SECRET: "${STRIPE_WEBHOOK_SECRET:-nosecret}"
      WILDCARDPASS: "${WILDCARDPASS:-nosecret}"
      HOST: "${HOST:-local.shntr.com}"
    build:
      context: './php/'
      dockerfile: ${DOCKERFILE_NAME:-Dockerfile}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - backend-shntr
    volumes:
      - ./app:/var/www/html/
      #      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
  php-cron-shntr:
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-nokey}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY:-nosecret}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-noregion}"
      shntr_TOKEN_PASSPHRASE: "${shntr_TOKEN_PASSPHRASE:-nopassphrase}"
      shntr_TOKEN_USERNAME: "${shntr_TOKEN_USERNAME:-nousername}"
      shntr_TOKEN_PASSWORD: "${shntr_TOKEN_PASSWORD:-nopassword}"
      shntr_TOKEN_PAYMAIL: "${shntr_TOKEN_PAYMAIL:-nopaymail}"
      shntr_TOKEN_ADDRESS: "${shntr_TOKEN_ADDRESS:-noaddress}"
      STRIPE_WEBHOOK_SECRET: "${STRIPE_WEBHOOK_SECRET:-nosecret}"
      HOST: "${HOST:-local.shntr.com}"
    build:
      context: './php/'
      dockerfile: ${DOCKERFILE_NAME:-Cron.dockerfile}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - backend-shntr
    volumes:
      - ./app:/var/www/html/
  apache-shntr:
    build: './apache/'
    depends_on:
      - php-shntr
      - db-shntr
    networks:
      - frontend-shntr
      - backend-shntr
    ports:
      - "80:80"
    volumes:
      - ./app:/var/www/html/
  db-cli-shntr:
    build: ./mariadb
    environment:
      - MYSQL_USER=${MYSQL_USER:-shntrco_sngine}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-shntrco_sngine}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-shntrco_sngine}
      - MYSQL_HOST=${MYSQL_HOST:-host.docker.internal}
      - MYSQL_PORT=${MYSQL_PORT:-3307}
    volumes:
      - ./mariadb:/tmp/mariadb
    command: '/tmp/mariadb/migrate'
    extra_hosts:
      - "host.docker.internal:host-gateway"
  ws-shntr:
    image: node:16.17.1-alpine
    volumes:
    - ./ws-svc:/ws-svc
    working_dir: /ws-svc
    entrypoint: ['/ws-svc/entrypoint.sh']
    command: 'npm start'
    ports:
      - "8083:8083"
    restart: on-failure
    environment:
      SQS_QUEUE_URL: "${SQS_QUEUE_URL:-noqueue}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-nokey}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY:-nosecret}"
      AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-noregion}"
      shntr_TOKEN_USERNAME: "${shntr_TOKEN_USERNAME:-nousername}"
      shntr_TOKEN_PASSWORD_DECRYPT: "${shntr_TOKEN_PASSWORD_DECRYPT:-nopassword}"
    networks:
      - backend-shntr
    extra_hosts:
      - "host.docker.internal:host-gateway"
networks:
  frontend-shntr:
  backend-shntr:
